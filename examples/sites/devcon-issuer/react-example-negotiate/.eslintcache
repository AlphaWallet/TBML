[{"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/reportWebVitals.js":"1","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/tokenMock.js":"2","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/Authenticator.js":"3","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/App.js":"4","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/index.js":"5","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/Card/index.js":"6","/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/Modal/index.js":"7","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/reportWebVitals.js":"8","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/Modal/index.js":"9","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/tokenMock.js":"10","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/index.js":"11","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/Negotiator.js":"12","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/Card/index.js":"13"},{"size":362,"mtime":1608198576024,"results":"14","hashOfConfig":"15"},{"size":328,"mtime":1609223802183,"results":"16","hashOfConfig":"15"},{"size":484,"mtime":1609224154141,"results":"17","hashOfConfig":"15"},{"size":2559,"mtime":1609224493471,"results":"18","hashOfConfig":"15"},{"size":135,"mtime":1609197633703,"results":"19","hashOfConfig":"15"},{"size":1590,"mtime":1609199184014,"results":"20","hashOfConfig":"15"},{"size":248,"mtime":1609070027898,"results":"21","hashOfConfig":"15"},{"size":362,"mtime":1609833486615,"results":"22","hashOfConfig":"23"},{"size":248,"mtime":1609833486284,"results":"24","hashOfConfig":"23"},{"size":328,"mtime":1609833486355,"results":"25","hashOfConfig":"23"},{"size":135,"mtime":1609835939590,"results":"26","hashOfConfig":"23"},{"size":5145,"mtime":1609860277406,"results":"27","hashOfConfig":"23"},{"size":1188,"mtime":1609833486284,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"71qmq9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"d9kpgq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/reportWebVitals.js",[],["60","61"],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/tokenMock.js",["62"],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/Authenticator.js",[],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/App.js",["63","64","65"],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/TokenScript/index.js",[],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/Card/index.js",[],"/Users/nicktaras/Documents/github/blockchain-attestation/playground/react-test/src/Modal/index.js",[],"/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/reportWebVitals.js",[],["66","67"],"/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/Modal/index.js",[],["68","69"],"/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/tokenMock.js",["70"],"export default [\n  { token: { ticketId: 42, ticketClass: \"VIP\", conferenceId: 1, isValid: true }, ownerAddress: null },\n  { token: { ticketId: 32, ticketClass: \"STANDARD\", conferenceId: 2, isValid: true }, ownerAddress: 2 },\n  { token: { ticketId: 15, ticketClass: \"VIP\", conferenceId: 3, isValid: true }, ownerAddress: 2 },\n];\n","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/index.js",[],"/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/TokenScript/Negotiator.js",["71","72"],"\n// started to mock out a way to clean the data recieved from the query.\n// const privateMethods = {\n//   // Remove types from returned\n//   removeDataTypes: (ticketData) => {\n//     const removeTypeKeyWords = ['SignedDevconTicket', 'DevconTicket', 'ArrayBuffer'];\n//     var expStr = removeTypeKeyWords.join(\"\\\\b|\\\\b\");\n//     var removeTypes = ticketData.replace(new RegExp(expStr, 'gi'), '').trim().replace(/ +/g, '');\n//     return removeTypes.substring(1, removeTypes.length - 1);\n//   },\n//   // format incoming data so it can be parsed into JS\n//   cleanString: (ticketData) => {\n//     var transformEach = [\n//       { from: \"[Uint8Contents]\", to: \"'[Uint8Contents]'\" },\n//       { from: \"<\", to: \"'<\" },\n//       { from: \">\", to: \">'\" },\n//     ]\n//     transformEach.map(transformObj => {\n//       ticketData.replace(new RegExp(transformObj.from, 'gi'), transformObj.to);\n//     });\n//     return ticketData;\n//   }\n// }\n\nexport class Negotiator {\n  constructor(filter) {\n    this.filter = filter;\n  }\n\n  // Modal / Auto Attestation\n  async negotiate() {\n    return true;\n  }\n\n  // old\n  // localhost:3000?ticket={\"ticket\":{\"devconId\":\"6n\",\"ticketId\":\"48646n\",\"ticketClass\":\"0n\"},\"commitment\":{\"[Uint8Contents]\":\"< 04 0a fd f0 e2 47 4c ae 9b 66 16 f0 4b ac dd 9f 76 ab 58 82 db b8 39 9d 3f 60 a1 53 61 da d7 03 0f 27 be 3f 58 3f e4 5d e9 49 5f 84 f4 82 37 ec 2b 7c 71 0e b3 b5 d2 e7 a5 65 2d 8d 56 c7 18 25 6f >\",\"byteLength\":65},\"signatureValue\":{\"[Uint8Contents]\":\"< 30 44 02 20 38 db 21 b6 b5 b7 c6 92 da ad a2 b6 2e bb 89 e5 a3 6e 3a 3c ce 66 1e 38 53 2b c9 ac c8 5c 34 1b 02 20 70 46 73 21 8f 77 b2 47 b5 51 ab 3c 3d 74 e1 ef 8f 4f 7e 3a e0 40 1d 53 54 26 65 3a aa 5e c2 a2 >\",\"byteLength\":70}}&secret=3446435555555\n  // new\n  // localhost:3000?ticket='SignedDevconTicket{ticket: DevconTicket {devconId: 6n,ticketId: 417541561855n,ticketClass: 0n},commitment: ArrayBuffer {[Uint8Contents]: <04 12 35 64 9d 5b fd 29 fe c5 d8 5b 6d e9 05 4e dc 8d 36 79 16 9d 88 4d 64 27 a9 2f af dd f8 fd 30 29 38 b6 71 ae 1e 46 2f 78 cb a0 4c fd 26 fe 36 16 ca 4f bf f2 c7 15 ae 8c f4 06 8e b8 b0 2f 22>,byteLength: 65},publicKeyInfo: PublicKeyInfo { signatureAlgorithm: undefined, publicKey: undefined },signatureValue: ArrayBuffer {[Uint8Contents]: <30 44 02 20 70 2c af bd e4 d3 d9 a3 45 b4 d4 70 c1 7f 26 62 b1 9d 8a 68 da f3 a1 6b b1 45 5f e7 86 31 8b 30 02 20 68 e3 f8 79 55 48 34 7e 71 33 c0 af f4 e5 43 77 23 86 dc 1c 54 ab 23 d5 40 eb 83 53 d3 da 0b da>,byteLength: 70}}'&secret='45845870684'\n\n  // Get the token instances (with filter)\n  async getTokenInstances() {\n\n    // Get ticket from params\n    const urlParams = new URLSearchParams(window.location.search);\n    const ticketFromQuery = urlParams.get('ticket');\n    const secretFromQuery = urlParams.get('secret');\n\n    // Get the current Storage Tokens\n    const storageTokens = localStorage.getItem('dcTokens');\n\n    // Parse into JS\n    let tokensParsed = storageTokens ? JSON.parse(storageTokens) : [];\n\n    // work in progress:\n\n    // Remove types from the string given / without this step JS won't be able to interpret the data when parsed\n    const ticketFromQueryNoTypes = privateMethods.removeDataTypes(ticketFromQuery).cleanString(ticketFromQuery);\n\n    debugger;\n\n    // Parse ticket for validation\n    const ticketFromQueryParsed = JSON.parse(ticketFromQueryNoTypes);\n\n    // Check if ticket is valid (rules)\n    const isValidTicket = (\n      ticketFromQueryParsed &&\n      ticketFromQueryParsed.ticket &&\n      ticketFromQueryParsed.ticket.ticketId &&\n      ticketFromQueryParsed.ticket.ticketClass &&\n      ticketFromQueryParsed.ticket.devconId\n    );\n\n    if (isValidTicket) {\n\n      // Store the filtered tickets\n      const tickets = [];\n\n      // If the ticket from the query is new / or to replace an existing ticket\n      let isNewQueryTicket = true;\n\n      // Build new list of tickets from current and query ticket\n      tokensParsed.map((tokenParsed) => {\n        // If the same as a previous ticket - replace with the new ticket\n        if (tokenParsed.ticket.ticketId === ticketFromQueryParsed.ticket.ticketId) {\n          // Include the secret inside the ticket object\n          ticketFromQueryParsed.secret = secretFromQuery;\n          tickets.push(ticketFromQueryParsed);\n          isNewQueryTicket = false;\n        } else {\n          tickets.push(tokenParsed);\n        }\n      });\n\n      // Add ticket if new\n      if (isNewQueryTicket) {\n        // Include the secret inside the ticket object\n        ticketFromQueryParsed.secret = secretFromQuery;\n        tickets.push(ticketFromQueryParsed);\n      }\n\n      // Set New tokens list\n      localStorage.setItem('dcTokens', JSON.stringify(tickets));\n    }\n\n    // Get New tokens list (with possible new addition)\n    const newStorageTokens = localStorage.getItem('dcTokens');\n\n    if (newStorageTokens) {\n      // return web friendly data for webster (ticket only)\n      return JSON.parse(newStorageTokens).map((token) => {\n        if (typeof (token) === 'string') return JSON.parse(token).ticket;\n        else return token.ticket;\n      });\n    } else {\n      // No tickets\n      return [];\n    }\n\n  }\n}","/Users/nicktaras/Documents/github/TokenScript/examples/sites/devcon-issuer/react-example-negotiate/src/Card/index.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":1,"nodeType":"80","endLine":5,"endColumn":3},{"ruleId":"81","severity":2,"message":"82","line":37,"column":3,"nodeType":"83","messageId":"84","endLine":37,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":40,"column":16,"nodeType":"87","messageId":"88","endLine":40,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":66,"column":6,"nodeType":"91","endLine":66,"endColumn":8,"suggestions":"92"},{"ruleId":"74","replacedBy":"93"},{"ruleId":"76","replacedBy":"94"},{"ruleId":"74","replacedBy":"95"},{"ruleId":"76","replacedBy":"96"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":1,"nodeType":"80","endLine":5,"endColumn":3},{"ruleId":"81","severity":2,"message":"97","line":57,"column":36,"nodeType":"83","messageId":"84","endLine":57,"endColumn":50},{"ruleId":"98","severity":1,"message":"99","line":82,"column":38,"nodeType":"100","messageId":"101","endLine":82,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":4,"column":8,"nodeType":"83","messageId":"104","endLine":4,"endColumn":22},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-undef","'selectVIPEventHandler' is not defined.","Identifier","undef","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Negotiator'. Either include it or remove the dependency array.","ArrayExpression",["107"],["105"],["106"],["105"],["106"],"'privateMethods' is not defined.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'CardActionArea' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [Negotiator]",{"range":"110","text":"111"},[2201,2203],"[Negotiator]"]